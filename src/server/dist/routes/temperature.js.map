{"version":3,"sources":["../../app/routes/temperature.js"],"names":["router","get","req","res","Temperature","find","todos","json","roomName","params","limit","sort","dateTime","post","temperature","body","hic","hif","humidity","temperatureC","temperatureF","save","newTemperature","status","message"],"mappings":";;;;;;AAAA;;AAIA;;;;;;;;AAEA,IAAIA,SAAS,sBAAb;;AAEA;AACAA,OAAOC,GAAP,CAAW,GAAX;AAAA,uEAAgB,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGYC,sBAAYC,IAAZ,EAHZ;;AAAA;AAGFC,6BAHE;;AAIRH,4BAAII,IAAJ,CAASD,KAAT;AAJQ;AAAA;;AAAA;AAAA;AAAA;;AAMRH,4BAAII,IAAJ;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA;;AAWA;AACAP,OAAOC,GAAP,CAAW,YAAX;AAAA,wEAAyB,kBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGGC,sBACfC,IADe,CACV;AACFG,sCAAUN,IAAIO,MAAJ,CAAWD;AADnB,yBADU,EAIfE,KAJe,CAIT,EAJS,EAKfC,IALe,CAKV;AACFC,sCAAU,CAAC;AADT,yBALU,CAHH;;AAAA;AAGXN,6BAHW;;AAWjBH,4BAAII,IAAJ,CAASD,KAAT;AAXiB;AAAA;;AAAA;AAAA;AAAA;;AAajBH,4BAAII,IAAJ;;AAbiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB;;AAAA;AAAA;AAAA;AAAA;;AAkBAP,OAAOa,IAAP,CAAY,GAAZ;AAAA,wEAAiB,kBAAMX,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEPW,mCAFO,GAEO,IAAIV,qBAAJ,CAAgB;AAChCQ,sCAAUV,IAAIa,IAAJ,CAASH,QADa;AAEhCJ,sCAAUN,IAAIa,IAAJ,CAASP,QAFa;AAGhCQ,iCAAKd,IAAIa,IAAJ,CAASC,GAHkB;AAIhCC,iCAAKf,IAAIa,IAAJ,CAASE,GAJkB;AAKhCC,sCAAUhB,IAAIa,IAAJ,CAASG,QALa;AAMhCC,0CAAcjB,IAAIa,IAAJ,CAASI,YANS;AAOhCC,0CAAclB,IAAIa,IAAJ,CAASK;AAPS,yBAAhB,CAFP;AAAA;AAAA;AAAA,+BAaoBN,YAAYO,IAAZ,EAbpB;;AAAA;AAaHC,sCAbG;;AAcTnB,4BAAIoB,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqBe,cAArB;AAdS;AAAA;;AAAA;AAAA;AAAA;;AAgBTnB,4BAAIoB,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB;AACjBiB,qCAAS,aAAIA;AADI,yBAArB;;AAhBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAAA;AAAA;AAAA;AAAA;;kBAsBexB,M","file":"temperature.js","sourcesContent":["import {\r\n    Router\r\n} from 'express';\r\n\r\nimport Temperature from '../model/temperature';\r\n\r\nvar router = Router();\r\n\r\n/* GET home page. */\r\nrouter.get('/', async(req, res) => {\r\n\r\n    try {\r\n        const todos = await Temperature.find();\r\n        res.json(todos);\r\n    } catch (err) {\r\n        res.json(err);\r\n    }\r\n\r\n});\r\n\r\n/* GET home page. */\r\nrouter.get('/:roomName', async(req, res) => {\r\n\r\n    try {\r\n        const todos = await Temperature\r\n            .find({\r\n                roomName: req.params.roomName\r\n            })\r\n            .limit(10)\r\n            .sort({\r\n                dateTime: -1\r\n            });\r\n        res.json(todos);\r\n    } catch (err) {\r\n        res.json(err);\r\n    }\r\n\r\n});\r\n\r\nrouter.post('/', async(req, res) => {\r\n\r\n    const temperature = new Temperature({\r\n        dateTime: req.body.dateTime,\r\n        roomName: req.body.roomName,\r\n        hic: req.body.hic,\r\n        hif: req.body.hif,\r\n        humidity: req.body.humidity,\r\n        temperatureC: req.body.temperatureC,\r\n        temperatureF: req.body.temperatureF,\r\n    });\r\n\r\n    try {\r\n        const newTemperature = await temperature.save();\r\n        res.status(201).json(newTemperature);\r\n    } catch (err) {\r\n        res.status(400).json({\r\n            message: err.message\r\n        });\r\n    }\r\n});\r\n\r\nexport default router;"]}